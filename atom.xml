<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[龚亮的栖息地]]></title>
  <link href="http://Mark-SS.github.io/atom.xml" rel="self"/>
  <link href="http://Mark-SS.github.io/"/>
  <updated>2014-03-26T15:19:31+08:00</updated>
  <id>http://Mark-SS.github.io/</id>
  <author>
    <name><![CDATA[龚亮]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[==与isEqual区别]]></title>
    <link href="http://Mark-SS.github.io/blog/2014/03/26/equals-equals-yu-isequalqu-bie/"/>
    <updated>2014-03-26T14:43:54+08:00</updated>
    <id>http://Mark-SS.github.io/blog/2014/03/26/equals-equals-yu-isequalqu-bie</id>
    <content type="html"><![CDATA[<ul>
<li>== 主要是比较两个内存地址是否相同。</li>
<li>isEqual 是比较两个数据对应<a href="http://www.baike.com/wiki/%E5%93%88%E5%B8%8C%E5%80%BC">哈希值</a>是否相同。</li>
<li><p>isEqual 首先判断两个对象是否类型一致，接着判断具体内容是否一致，如果类型不同直接return no。</p></li>
<li><p>通过NSString来比较这个问题</p>

<pre><code>  NSString *string1 = @"111";
  NSString *string2 = @"111";  

  打印内存地址
  NSLog@("string1 = %p, string2 = %p", string1, string2);
  string1 = 0xdd4ec, string2 = 0xdd4ec  
  所以 if (string1 == string2) return YES;  

  打印hash值  
  NSLog(@"hash stinrg1 = %d, string2 = %d ", [string1 hash], [string2 hash]);  
  hash string1 = 487555398, string2 = 487555398;

  所以 if ([string1 isEqual:string2]) return YES;

  --------------------------------------------------------------------------

  NSString *str1 = [[NSString alloc]initWithFormat:@"111"];  
  NSString *str2 = [[NSString alloc]initWithFormat:@"111"];

  打印内存地址  
  NSLog(@"内存  str1 = %p ,str2 = %p",str1,str2);
  内存 str1 = 0x1d888520 ,str2 = 0x1d888530
  所以 if (str1 == str2) return NO;

  打印hash值  
  NSLog(@"hash str1 = %d ,str2 = %d",[str1 hash],[str2 hash]);  
  hash str1 = 487555398 ,str2 = 487555398
  所以 if ([str1 isEqual:str2]) return YES;
</code></pre></li>
<li><p>通过UIImage来比较</p>

<pre><code>  UIImage* img1=[UIImage imageNamed:@"image.png"];  
  UIImage* img2=[UIImage imageNamed:@"image.png"];  

  打印内存地址  
  NSLog(@"img1 = %p , img2 = %p",img1,img2);      img1 = 0x1cd76320 , img2 = 0x1cd76320
  所以 if(img1 == img2) return YES;  

  打印hash值  
  NSLog(@"hash img1 = %d , img2 = %d",[img1 hash],[img2 hash]);  
  hash img1 = 483877664 , img2 = 483877664;  
  所以 if([img1 isEqual:img2]) return YES;
</code></pre></li>
<li><p>综上: == 相同时hash值一定相同， hash相同是 == 不一定相等。</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第三方类库]]></title>
    <link href="http://Mark-SS.github.io/blog/2014/03/13/di-san-fang-lei-ku/"/>
    <updated>2014-03-13T10:29:00+08:00</updated>
    <id>http://Mark-SS.github.io/blog/2014/03/13/di-san-fang-lei-ku</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/lukabernardi/LBBlurredImage">LBBLurredImage</a> 是一个继承子UIImageView，轻而易举使图片模糊的项目。你将仅仅用一行海马来创建一个神奇的模糊效果。<center><img src="https://raw.github.com/lukabernardi/LBBlurredImage/master/Resources/SimulatorScreenshot.png" alt="" /></center></p>

<p><a href="https://gist.github.com/billyohgren/7944887">UILabel+ContentSize</a>在UILabel内计算内容的大小。</p>

<p><em>UILabel+ContentSize.h</em></p>

<pre><code>#import &lt;UIKit/UIkit.h&gt;

@interface UILabel (ContentSize)

- (CGSize)contentSize;

@end
</code></pre>

<p><em>UILabel+ContentSize.m</em></p>

<pre><code>#import "UILabel+ContentSize.h"

@implementation UILabel (ContentSize)

- (CGSize)contentsize {
    NSMutableParagraphStyle *paragraphStyle = [[NSMutableParagraphStyle alloc] init];
    paragraphStyle.lineBreakMode = self.lineBreakMode;
    paragraphStyle.alignment = self.textAlignment;
    NSDictionary * attributes = @{NSFontAttributeName : self.font,
                                   NSParagraphStyleAttributeName : paragraphStyle};
                                    CGSize contentSize = [self.text 
                                    boundingRectWithSize:self.frame.size
                                                options:(NSStringDrawingUsesLineFragmentOrigin|NSStringDrawingUsesFontLeading)
                                       attributes:attributes
                                          context:nil].size;
     return contentSize;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
